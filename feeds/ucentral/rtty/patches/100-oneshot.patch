Index: rtty-7.1.4/src/rtty.c
===================================================================
--- rtty-7.1.4.orig/src/rtty.c
+++ rtty-7.1.4/src/rtty.c
@@ -308,7 +308,8 @@ static void parse_msg(struct rtty *rtty)
 
         case MSG_TYPE_LOGOUT:
             tty_logout(rtty, buffer_pull_u8(rb));
-            break;
+            exit(1);
+	    break;
 
         case MSG_TYPE_TERMDATA:
             write_data_to_tty(rtty, buffer_pull_u8(rb), msglen - 1);
@@ -429,12 +430,12 @@ static void rtty_timer_cb(struct ev_loop
         return;
     }
 
-    if (now - rtty->active > RTTY_HEARTBEAT_INTEVAL * 3 / 2) {
+/*    if (now - rtty->active > RTTY_HEARTBEAT_INTEVAL * 3 / 2) {
         log_err("Inactive too long time\n");
         rtty_exit(rtty);
         return;
     }
-
+*/
     if (now - rtty->last_heartbeat > RTTY_HEARTBEAT_INTEVAL - 1) {
         rtty->last_heartbeat = now;
         rtty_send_msg(rtty, MSG_TYPE_HEARTBEAT, NULL, 0);
Index: rtty-7.1.4/src/main.c
===================================================================
--- rtty-7.1.4.orig/src/main.c
+++ rtty-7.1.4/src/main.c
@@ -95,7 +95,7 @@ int main(int argc, char **argv)
     int c;
 
     while (true) {
-        c = getopt_long(argc, argv, "I:h:p:d:asDt:f:RS:vV", long_options, &option_index);
+        c = getopt_long(argc, argv, "I:h:p:d:asDt:f:RS:vVT:", long_options, &option_index);
         if (c == -1)
             break;
 
@@ -109,6 +109,9 @@ int main(int argc, char **argv)
         case 'p':
             rtty.port = atoi(optarg);
             break;
+        case 'T':
+            rtty.timeout = atoi(optarg);
+            break;
         case 'd':
             if (strlen(optarg) > 126) {
                 log_err("Description too long\n");
Index: rtty-7.1.4/src/rtty.h
===================================================================
--- rtty-7.1.4.orig/src/rtty.h
+++ rtty-7.1.4/src/rtty.h
@@ -79,6 +79,8 @@ struct rtty {
     void *ssl;              /* Context wrap of openssl, wolfssl and mbedtls */
     struct tty *ttys[RTTY_MAX_TTY];
     struct file_context file_context;
+    int timeout;
+    struct ev_timer kill_timer;
 };
 
 int rtty_start(struct rtty *rtty);
